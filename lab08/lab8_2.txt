A)
i)The UI is composable because our components don't know their children ahead of time. If a companant renders props.childern inside a div, then we will see this in the final output. This is prefered over inheritance because it provides a greater flexability and higher level of abstraction. 

ii) Combines JS and HTML syntax to update the DOM from a script

iii)ReactJS prevents most XSS vulnerabilities when creating the DOM

iv)Componants are created in order when the render function is called, and turns into an interactive element for the user so it does not have to be rerendered. They are saved in states before being updated. 

v)The state is mutable while props are not. State will change based on what the user does to the page. Props are representation of the data passed and cannot be changed. 

B)
i)An error is thrown in the browser because I tried chaning the prop when it can't be changed. 

ii)If every time someone commentented the box was rendered, that would be computationaly slow. It makes more sense to render it at the end when comments aren't loaded so it does not render over and over again.

iii)your componants will be in sync and not display past information

iv)If a comment is rejected, the page will not display it, even when it's optomistic, since it assumes the only comments to be posted will be the ones allowed. 